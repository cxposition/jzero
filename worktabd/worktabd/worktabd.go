// Code generated by goctl. DO NOT EDIT.
// Source: worktabd.proto

package worktabd

import (
	"context"

	"github.com/jaronnie/worktab/worktabd/worktabdpb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Container             = worktabdpb.Container
	Empty                 = worktabdpb.Empty
	ServerVersionResponse = worktabdpb.ServerVersionResponse

	Worktabd interface {
		ServerVersion(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ServerVersionResponse, error)
		Container(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Container, error)
	}

	defaultWorktabd struct {
		cli zrpc.Client
	}
)

func NewWorktabd(cli zrpc.Client) Worktabd {
	return &defaultWorktabd{
		cli: cli,
	}
}

func (m *defaultWorktabd) ServerVersion(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ServerVersionResponse, error) {
	client := worktabdpb.NewWorktabdClient(m.cli.Conn())
	return client.ServerVersion(ctx, in, opts...)
}

func (m *defaultWorktabd) Container(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Container, error) {
	client := worktabdpb.NewWorktabdClient(m.cli.Conn())
	return client.Container(ctx, in, opts...)
}
