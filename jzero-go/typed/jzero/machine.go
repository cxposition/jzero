// Code generated by jzero. DO NOT EDIT.
// type: machine

package jzero

import (
	"context"

	"github.com/jzero-io/jzero-go/model/jzero/pb/machinepb"

	"github.com/jzero-io/jzero-go/rest"
)

var _ = context.Background()

type MachineGetter interface {
	Machine() MachineInterface
}

type MachineInterface interface {
	// API /api/v1.0/machine/version
	MachineVersion(ctx context.Context, param *machinepb.Empty) (*machinepb.MachineVersionResponse, error)

	MachineExpansion
}

type machineClient struct {
	client rest.Interface
}

func newMachineClient(c *JzeroClient) *machineClient {
	return &machineClient{
		client: c.RESTClient(),
	}
}

func (x *machineClient) MachineVersion(ctx context.Context, param *machinepb.Empty) (*machinepb.MachineVersionResponse, error) {
	var resp machinepb.MachineVersionResponse
	err := x.client.Verb("GET").
		SubPath(
			"/api/v1.0/machine/version",
		).
		Params().
		Body(nil).
		Do(ctx).
		Into(&resp, true)
	if err != nil {
		return nil, err
	}

	return &resp, nil
}
