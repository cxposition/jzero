// Code generated by jzero. DO NOT EDIT.
// type: jzero_client

package jzero

import (
	"github.com/jaronnie/jzero-go/rest"
)

type JzeroInterface interface {
	RESTClient() rest.Interface
	
	CredentialGetter
	
}

type JzeroClient struct {
	restClient rest.Interface
}

func (x *JzeroClient) RESTClient() rest.Interface {
	if x == nil {
		return nil
	}
	return x.restClient
}

func (x *JzeroClient) Credential() CredentialInterface {
	return newCredentialClient(x)
}


// NewForConfig creates a new JzeroClient for the given config.
func NewForConfig(x *rest.RESTClient) (*JzeroClient, error) {
	config := *x
	client, err := rest.RESTClientFor(&config)
	if err != nil {
		return nil, err
	}
	return &JzeroClient{client}, nil
}