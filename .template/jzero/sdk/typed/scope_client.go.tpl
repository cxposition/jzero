// Code generated by jzero. DO NOT EDIT.
// type: {{.ScopeVersion}}_client

package {{.ScopeVersion}}

import (
	"{{.GoModule}}/rest"
)

type {{.UpScopeVersion}}Interface interface {
	RESTClient() rest.Interface
	
	{{range $v := .UpResources}}{{$v}}Getter
	{{end}}
}

type {{.UpScopeVersion}}Client struct {
	restClient rest.Interface
}

func (x *{{.UpScopeVersion}}Client) RESTClient() rest.Interface {
	if x == nil {
		return nil
	}
	return x.restClient
}

{{range $v := .UpResources}}func (x *{{$.UpScopeVersion}}Client) {{$v}}() {{$v}}Interface {
	return new{{$v}}Client(x)
}

{{end}}


// NewForConfig creates a new {{.UpScopeVersion}}Client for the given config.
func NewForConfig(x *rest.RESTClient) (*{{.UpScopeVersion}}Client, error) {
	config := *x
	client, err := rest.RESTClientFor(&config)
	if err != nil {
		return nil, err
	}
	return &{{.UpScopeVersion}}Client{client}, nil
}