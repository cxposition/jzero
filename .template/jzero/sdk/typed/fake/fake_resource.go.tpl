// Code generated by jzero. DO NOT EDIT.
// type: fake_{{.Resource}}

package fake

import (
	"context"

	{{range $k, $v := .Gateways}}{{if or $v.IsStreamServer $v.IsStreamClient $v.IsSpecified}}"{{$.GoModule}}/rest"{{break}}{{end}}{{end}}

	{{range $v := .GoImportPaths}}"{{$v}}"
	{{end}}
)

var (
	{{range $k, $v := .Gateways}}FakeReturn{{$v.FuncName}} = &{{if or $v.IsStreamServer $v.IsStreamClient $v.IsSpecified}}rest.Request{}{{else}}{{$v.HTTPResponseBody.RootPath}}.{{$v.HTTPResponseBody.Name}}{}{{end}}
	{{end}}
)

type {{.UpResource}}Getter interface {
	{{.UpResource}}() {{.UpResource}}Interface

	Fake{{.UpResource}}Expansion
}

type {{.UpResource}}Interface interface {
	{{range $k, $v := .Gateways}}{{$v.FuncName}}({{if or $v.IsStreamServer $v.IsStreamClient $v.IsSpecified}}{{else}}ctx context.Context,{{end}} param *{{$v.ProtoRequestBody.RootPath}}.{{$v.ProtoRequestBody.Name}}) ({{if or $v.IsStreamServer $v.IsStreamClient $v.IsSpecified}}*rest.Request{{else}}*{{$v.HTTPResponseBody.RootPath}}.{{$v.HTTPResponseBody.Name}}{{end}}, error)
	{{end}}
}

type Fake{{.UpResource}} struct {
	Fake *Fake{{.UpScopeVersion}}
}

{{range $k, $v := .Gateways}}func (f *Fake{{$.UpResource}}) {{$v.FuncName}}({{if or $v.IsStreamServer $v.IsStreamClient $v.IsSpecified}}{{else}}ctx context.Context,{{end}}param *{{$v.ProtoRequestBody.RootPath}}.{{$v.ProtoRequestBody.Name}}) ({{if or $v.IsStreamServer $v.IsStreamClient $v.IsSpecified}}*rest.Request{{else}}*{{$v.HTTPResponseBody.RootPath}}.{{$v.HTTPResponseBody.Name}}{{end}}, error) {
	return FakeReturn{{$v.FuncName}}, nil
}

{{end}}