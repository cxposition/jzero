// Code generated by goctl. DO NOT EDIT.
// Source: credential.proto

package server

import (
	"context"

	"github.com/jzero-io/jzero/daemon/internal/logic/credential"
	"github.com/jzero-io/jzero/daemon/internal/pb/credentialpb"
	"github.com/jzero-io/jzero/daemon/internal/svc"
)

type CredentialServer struct {
	svcCtx *svc.ServiceContext
	credentialpb.UnimplementedCredentialServer
}

func NewCredentialServer(svcCtx *svc.ServiceContext) *CredentialServer {
	return &CredentialServer{
		svcCtx: svcCtx,
	}
}

func (s *CredentialServer) CredentialVersion(ctx context.Context, in *credentialpb.Empty) (*credentialpb.CredentialVersionResponse, error) {
	l := credentiallogic.NewCredentialVersionLogic(ctx, s.svcCtx)
	return l.CredentialVersion(in)
}

func (s *CredentialServer) CreateCredential(ctx context.Context, in *credentialpb.CreateCredentialRequest) (*credentialpb.CreateCredentialResponse, error) {
	l := credentiallogic.NewCreateCredentialLogic(ctx, s.svcCtx)
	return l.CreateCredential(in)
}

func (s *CredentialServer) CredentialList(ctx context.Context, in *credentialpb.CredentialListRequest) (*credentialpb.CredentialListResponse, error) {
	l := credentiallogic.NewCredentialListLogic(ctx, s.svcCtx)
	return l.CredentialList(in)
}

func (s *CredentialServer) CredentialDetail(ctx context.Context, in *credentialpb.Int32Id) (*credentialpb.Credential, error) {
	l := credentiallogic.NewCredentialDetailLogic(ctx, s.svcCtx)
	return l.CredentialDetail(in)
}
